/*
Subarray range with given sum
Difficulty: MediumAccuracy: 42.21%Submissions: 41K+Points: 4
Given an unsorted array of integers arr[], and a target tar, determine the number of subarrays whose elements sum up to the target value.

Examples:

Input: arr[] = [10, 2, -2, -20, 10] , tar = -10
Output: 3
Explanation: Subarrays with sum -10 are: [10, 2, -2, -20], [2, -2, -20, 10] and [-20, 10].
Input: arr[] = [1, 4, 20, 3, 10, 5] , tar = 33
Output: 1
Explanation: Subarray with sum 33 is: [20,3,10].
Expected Time Complexity: O(n)
Expected Auxilary Space: O(n)

Constraints:
1 <= arr.size() <= 106
-105 <= arr[i] <= 105
-105 <= tar <= 105
*/

class Solution {
  public:
    // Function to count the number of subarrays which adds to the given sum.
    int subArraySum(vector<int>& arr, int tar) {
        // Your code here
        unordered_map<int, int> hm;
        int prefix_sum=0;
        int no_of_sub_arr=0;
        
        for(auto a: arr){
            prefix_sum += a;
            if(prefix_sum == tar) no_of_sub_arr++;
            if(hm.find(prefix_sum - tar) != hm.end())
                no_of_sub_arr += hm[prefix_sum - tar];
            hm[prefix_sum]++;
        }
        
        return no_of_sub_arr;
    }
};
