/*
Longest valid Parentheses
Difficulty: HardAccuracy: 26.13%Submissions: 108K+Points: 8
Given a string str consisting of opening and closing parenthesis '(' and ')'. Find length of the longest valid parenthesis substring.

A parenthesis string is valid if:

For every opening parenthesis, there is a closing parenthesis.
Opening parenthesis must be closed in the correct order.
Examples :

Input: str = ((()
Output: 2
Explaination: The longest valid parenthesis substring is "()".
Input: str = )()())
Output: 4
Explaination: The longest valid parenthesis substring is "()()".
Expected Time Complexity: O(|str|)
Expected Auxiliary Space: O(|str|)

Constraints:
1 ≤ |str| ≤ 105  
*/

class Solution {
  public:
    int maxLength(string &str)
{
    stack<int> st;
    st.push(-1);
    int max_len = 0;
    for (int i = 0; i < str.size(); i++)
    {
        if (str[i] == '(')
        {
            st.push(i);
        }
        else
        {
            st.pop();
            if (st.empty())
            {
                st.push(i);
            }
            max_len = max(max_len, i - st.top());
        }
    }
    return max_len;
  }
};
